{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","api/todos.ts","App.tsx","index.tsx"],"names":["UserInfo","user","className","href","email","name","TodoInfo","todo","classNames","completed","title","TodoList","todos","map","id","username","userId","getUser","userid","usersFromServer","find","todosFromServer","App","useState","setUser","setTitle","toDo","setToDo","eror","setEror","newId","sort","a","b","length","newUserId","foundId","getUserId","newUser","newEl","Paper","elevation","style","width","margin","padding","action","method","onSubmit","event","preventDefault","trim","push","TextField","variant","marginBottom","label","type","value","onChange","target","placeholder","Select","inputProps","displayEmpty","MenuItem","el","FormHelperText","Button","color","onClick","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.651f9626.chunk.js","sourcesContent":["import { User } from '../../types/Users';\n\ntype Props = {\n  user: User | null,\n};\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\nimport { UserInfo } from '../UserInfo/UserInfo';\nimport { Todo } from '../../types/Todos';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  return (\n    <article\n      data-id=\"16\"\n      className={classNames('TodoInfo', {\n        'TodoInfo--completed': todo.completed,\n      })}\n    >\n      <h2 className=\"TodoInfo__title\">{todo.title}</h2>\n\n      <UserInfo user={todo.user} />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todos';\nimport { TodoInfo } from '../TodoInfo/TodoInfo';\n\ntype Props = {\n  todos: Todo[]\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map(todo => (\n        <TodoInfo todo={todo} key={todo.id} data-id={todo.id} />\n      ))}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import { useState } from 'react';\nimport classNames from 'classnames';\nimport {\n  Button, FormHelperText, MenuItem, Paper, Select, TextField,\n} from '@mui/material';\nimport { TodoList } from './components/TodoList/TodoList';\nimport { Todo } from './types/Todos';\nimport { User } from './types/Users';\nimport './App.scss';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nfunction getUser(userid: number | null): User | null {\n  const foundUser = usersFromServer.find(user => user.id === userid);\n\n  return foundUser || null;\n}\n\nconst getUserId = (username: string): number | null => {\n  const foundId = usersFromServer.find(user => user.name === username);\n\n  return foundId?.id || null;\n};\n\nconst todos: Todo[] = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUser(todo.userId),\n}));\n\nexport const App = () => {\n  const [user, setUser] = useState('');\n  const [title, setTitle] = useState('');\n  const [toDo, setToDo] = useState(todos);\n  const [eror, setEror] = useState(false);\n\n  const newId = [\n    ...toDo.sort((a, b) => a.id - b.id)][todosFromServer.length - 1].id + 1;\n  const newUserId = getUserId(user);\n  const newUser = getUser(newUserId);\n  const createTodo = () => (\n    {\n      id: newId,\n      title,\n      completed: false,\n      userId: newUserId,\n      user: newUser,\n    }\n  );\n\n  const newEl = createTodo();\n  const add = () => {\n    toDo.push(newEl);\n\n    return toDo;\n  };\n\n  return (\n    <Paper\n      elevation={12}\n      style={{ width: '50vh', margin: '0 auto', padding: '25px' }}\n    >\n      <h1>Add todo form</h1>\n\n      <form\n        id=\"form\"\n        action=\"/api/users\"\n        method=\"Post\"\n        onSubmit={(event) => {\n          event.preventDefault();\n\n          if (user.trim() !== '') {\n            setTitle('');\n          }\n\n          if (title.trim() !== '') {\n            setUser('');\n          }\n\n          if (user.trim() !== '' && title.trim() !== '') {\n            setToDo(add());\n            setEror(false);\n          }\n        }}\n      >\n        <div className=\"field\">\n          <TextField\n            variant=\"outlined\"\n            style={{ marginBottom: '10px', width: '100%' }}\n            label=\"ToDo Title\"\n            id=\"text\"\n            type=\"text\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={(event) => setTitle(event.target.value)}\n            placeholder=\"enter todo title\"\n          />\n          {eror && (\n            <span\n              style={{ marginBottom: '20px' }}\n              // eslint-disable-next-line quote-props\n              className={classNames('no-error', { 'error': title === '' })}\n            >\n              Please enter a title\n            </span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <Select\n            id=\"title\"\n            inputProps={{ 'aria-label': 'Without label' }}\n            displayEmpty\n            data-cy=\"userSelect\"\n            value={user}\n            onChange={(event => setUser(event.target.value))}\n            style={{ width: '100%' }}\n          >\n            <MenuItem\n              value=\"\"\n            >\n              <em>Choose a user</em>\n            </MenuItem>\n            {usersFromServer.map(el => (\n              <MenuItem\n                value={el.name}\n                key={el.id}\n              >\n                {el.name}\n              </MenuItem>\n            ))}\n          </Select>\n          <FormHelperText\n            style={{ marginBottom: '10px' }}\n          >\n            Chose user\n          </FormHelperText>\n          {eror && (\n            <span\n              className={classNames(\n                // eslint-disable-next-line quote-props\n                'no-error', { 'error': user === '0' || user === '' },\n              )}\n            >\n              Please choose a user\n            </span>\n          )}\n        </div>\n\n        <Button\n          variant=\"outlined\"\n          color=\"success\"\n          type=\"submit\"\n          data-cy=\"submitButton\"\n          onClick={() => {\n            if (user === '' || title === '') {\n              setEror(true);\n            }\n          }}\n          style={{ marginBottom: '20px' }}\n        >\n          Add\n        </Button>\n      </form>\n      <div className=\"container\">\n        <TodoList todos={toDo} />\n      </div>\n    </Paper>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}